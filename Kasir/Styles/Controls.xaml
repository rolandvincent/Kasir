<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:Kasir.Utils.Controls"
                    xmlns:pb="clr-namespace:Kasir.Views.PopupBase">


    <Style x:Key="CaptionText"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="TextTrimming"
                Value="CharacterEllipsis" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="FontFamily"
                Value="Bahnscrift" />
        <Setter Property="FontSize"
                Value="18" />
    </Style>

    <Style x:Key="CaptionTextGrayed"
           TargetType="TextBlock"
           BasedOn="{StaticResource CaptionText}">
        <Setter Property="Foreground"
                Value="#454545" />
        <Setter Property="FontSize"
                Value="18" />
    </Style>

    <Style x:Key="TitleBarButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="{DynamicResource TitleBarButtonForegroundBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource TitleBarButtonBackgroundBrush}" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}">
                        <Label FontFamily="Webdings"
                               x:Name="txt"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="16"
                               Foreground="{TemplateBinding Foreground}"
                               Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource TitleBarButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource TitleBarButtonDownBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Close-->
    <Style x:Key="CloseButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="{DynamicResource TitleBarButtonForegroundBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource TitleBarButtonBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}"
                          Width="40"
                          Height="40">
                        <Label FontFamily="Webdings"
                               x:Name="txt"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="16"
                               Foreground="{TemplateBinding Foreground}"
                               Content="r"></Label>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource TitleBarCloseButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource TitleBarCloseButtonDownBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="{DynamicResource Brush.Primary}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationMenuItem"
           TargetType="MenuItem">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="FontSize"
                Value="24" />
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Icon}"
                                              Height="{TemplateBinding Height}"
                                              HorizontalAlignment="Center"
                                              Width="{TemplateBinding Height}"
                                              Margin="15 0 5 0">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleX="0.5"
                                                    ScaleY="0.5" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                            <Label Content="{TemplateBinding Header}"
                                   Foreground="{TemplateBinding Foreground}"></Label>
                        </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="#FFF" />
                            <Setter Property="Foreground"
                                    Value="#23262B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:NavigationMenuItem}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Foreground"
                Value="{DynamicResource Control.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                             Color="{DynamicResource Color.Menu.Background}" />
                        </Border.Background>
                        <Grid ClipToBounds="False">
                            <Border x:Name="Indicator"
                                    Width="5"
                                    CornerRadius="2"
                                    Background="{DynamicResource Brush.Primary}"
                                    HorizontalAlignment="Left"
                                    Visibility="Collapsed" />
                            <ContentPresenter Margin="20 15" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                            
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#2C2E38"
                                                    To="#262930"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#262930"
                                                    To="#2C2E38"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource Control.Background}" />
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                            <Setter Property="Background"
                                    TargetName="Indicator"
                                    Value="{DynamicResource Brush.Secondary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="Foreground"
                Value="{DynamicResource Control.Foreground}" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{DynamicResource Menu.Background}"
                            ClipToBounds="False">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                              Opacity="0.3"
                                              BlurRadius="5" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Margin"
                                    Value="0,3,5,5" />
                            <Setter TargetName="Border"
                                    Property="Padding"
                                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                                    Property="CornerRadius"
                                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Padding"
                Value="10 5" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd"
                            Padding="18,0,18,0"
                            BorderThickness="0"
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            Uid="Border_38">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Header}"
                                          Grid.Column="1"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Uid="ContentPresenter_33" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource Brush.Primary}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource Control.Foreground.Light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Page Style -->

    <Style x:Key="Page_Style"
           TargetType="{x:Type UserControl}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0"
                                    Y="50" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Visibility"
                     Value="Collapsed">
                <Setter Property="Opacity"
                        Value="0" />
            </Trigger>

            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Duration="0:0:1"
                                         From="0"
                                         To="1" />
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                         From="50"
                                         To="0"
                                         Duration="0:0:0.8"
                                         DecelerationRatio="0.6" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Page_StyleFade"
           TargetType="{x:Type UserControl}">
        <Style.Triggers>
            <Trigger Property="Visibility"
                     Value="Collapsed">
                <Setter Property="Opacity"
                        Value="0" />
            </Trigger>

            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Duration="0:0:1"
                                         From="0"
                                         To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Grid_FadeIn"
           TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="Visibility"
                     Value="Collapsed">
                <Setter Property="Opacity"
                        Value="0" />
            </Trigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Visibility}"
                         Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:1"
                                             From="0"
                                             To="1"
                                             DecelerationRatio="0.6" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>


            <EventTrigger RoutedEvent="Loaded">

            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="GroupBox">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="#C3C3C3" />
        <Setter Property="FontFamily"
                Value="Poppins Light" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Border Background="#D9D9D9"
                                x:Name="BorderMask"
                                CornerRadius="10">
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="27" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Background="#D9D9D9"
                                        CornerRadius="8 8 0 0"
                                        BorderThickness="0 0 0 2"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                                    <Label HorizontalAlignment="Center" 
                                           VerticalAlignment="Center" 
                                           Content="{TemplateBinding Header}" />
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}" 
                                                  Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>

                            <Border.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=BorderMask}" />
                            </Border.OpacityMask>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#B9B9B9" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#D9D9D9" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{DynamicResource DisabledForegroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{DynamicResource DisabledBorderDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#B9B9B9" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="5"
                    BorderThickness="0">
               
                <Border.Background>

                    <SolidColorBrush Color="#D9D9D9" />

                </Border.Background>
            </Border>
            <Border Grid.Column="0"
                    CornerRadius="5,0,0,5"
                    Margin="1">
                <Border.Background>
                    <SolidColorBrush Color="#D9D9D9" />
                </Border.Background>
            </Border>
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z">
                <Path.Fill>
                    <SolidColorBrush Color="#636363" />
                </Path.Fill>
            </Path>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="MinWidth"
                Value="120" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                                      Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{DynamicResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{DynamicResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Bottom"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                        </Grid>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        CornerRadius="5">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                 Property="AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent"
                            CornerRadius="5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#D9D9D9" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonNoTemplate"
           TargetType="Button">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:PopupModal}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="#9000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:PopupModal}">
                    <Grid>
                        <Button Style="{DynamicResource ButtonNoTemplate}"
                                Background="{TemplateBinding Background}"
                                Command="{Binding DismissCommand, RelativeSource={RelativeSource AncestorType=ctrl:PopupModal, Mode=FindAncestor}}"/>

                        <Grid VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              MinHeight="100"
                              MinWidth="200"
                              RenderTransformOrigin="0.5 0.5"
                              x:Name="InnerContent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="BorderMask"
                                    Background="{DynamicResource Control.Background}"
                                    Grid.RowSpan="2"
                                    CornerRadius="10" />
                            <Border Background="{DynamicResource Menu.Background}"
                                    Panel.ZIndex="999"
                                    BorderBrush="{DynamicResource Menu.Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{DynamicResource CaptionText}"
                                               Padding="10 0"
                                               x:Name="PopupCaptionText"
                                               TextAlignment="Left"
                                               Text="{TemplateBinding Header}" />

                                    <Button Style="{DynamicResource CloseButtonStyle}"
                                            Grid.Column="1"
                                            Focusable="False"
                                            ToolTip="Close"
                                            Command="{Binding DismissCommand, RelativeSource={RelativeSource AncestorType=ctrl:PopupModal, Mode=FindAncestor}}" />
                                </Grid>
                            </Border>
                            <Grid Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Grid>
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=BorderMask}" />
                            </Grid.OpacityMask>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToastButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#555" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:MessageToast}">
        <Setter Property="Background"
                Value="#333" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0 0 0 30" />
        <Setter Property="Background"
                Value="#333" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Padding"
                Value="20 10" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:MessageToast}">
                    <Grid>
                        <Border x:Name="Mask"
                                Background="#000"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}" />
                                <Button Grid.Column="1"
                                        Style="{DynamicResource ToastButton}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Cursor="Hand"
                                        Margin="0 0 8 0"
                                        VerticalAlignment="Center"
                                        Visibility="{TemplateBinding CloseButtonVisibility}"
                                        Command="{Binding DismissCommand, RelativeSource={RelativeSource AncestorType=ctrl:MessageToast, Mode=FindAncestor}}">
                                    <Path Data="M19.207 6.207a1 1 0 0 0-1.414-1.414L12 10.586 6.207 4.793a1 1 0 0 0-1.414 1.414L10.586 12l-5.793 5.793a1 1 0 1 0 1.414 1.414L12 13.414l5.793 5.793a1 1 0 0 0 1.414-1.414L13.414 12l5.793-5.793z"
                                          Fill="{TemplateBinding Foreground}"
                                          Stretch="Fill"
                                          Height="10"
                                          Width="10"
                                          Margin="5"/>
                                </Button>

                            </Grid>
               
                            <Border.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=Mask}" />
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>